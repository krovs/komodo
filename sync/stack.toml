[[stack]]
name = "stack"
[stack.config]
server = "server-test"
destroy_before_deploy = true
pre_deploy.command = """
  # Add multiple commands on new lines. Supports comments.
  docker volume create ntfy
  docker volume create uptimekuma
  docker volume create homepage
  docker volume create rsync
  docker volume create caddy
"""
file_contents = """
--
name: home
services:
  uptime-kuma:
    container_name: uptime-kuma
    image: louislam/uptime-kuma
    restart: always
    ports:
      - 3001:3001
    volumes:
      - uptimekuma:/app/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - default
  
  caddy:
    image: caddy:latest
    container_name: caddy
    restart: unless-stopped
    ports:
      - "80:80"   # HTTP for ACME challenges and HTTP -> HTTPS redirect
      - "443:443" # HTTPS
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro # Mount your Caddy configuration
    networks:
      - default

  homepage:
    container_name: homepage
    image: ghcr.io/gethomepage/homepage:latest
    ports:
      - 3000:3000
    environment:
      - HOMEPAGE_ALLOWED_HOSTS=home.lab,home.feluran.net
    volumes:
      - homepage:/app/config
    networks:
      - default

  watchtower:
    container_name: watchtower
    restart: unless-stopped
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      TZ: Europe/Madrid
      WATCHTOWER_MONITOR_ONLY: "false"
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_NO_STARTUP_MESSAGE: "false"
      WATCHTOWER_NOTIFICATIONS: "shoutrrr"
      WATCHTOWER_NOTIFICATION_URL: "pushover://shoutrrr:az4x7uogec1p9hrqakt6uybscynvh5@u2k1mo92sid1qfaduof1h1rbvowr5n/?title=ðŸ—¼+Watchtower+|+Container+updates"
    networks:
      - default
  

  rsync:
    container_name: rsync
    image: alpine:latest
    volumes:
      - /var/lib/docker/volumes:/var/lib/docker/volumes
      - rsync:/usr/local/bin
      - /etc/localtime:/etc/localtime:ro
      - $HOME/.ssh/:/root/.ssh/:ro
    command: >
      sh -c "apk add --no-cache rsync openssh-client curl &&
        crontab /usr/local/bin/crontab && 
        crond -f"
    restart: unless-stopped
    networks:
      - default

  ntfy:
    image: binwiederhier/ntfy
    container_name: ntfy
    command:
      - serve
    volumes:
      - /var/cache/ntfy:/var/cache/ntfy
      - ntfy:/etc/ntfy
    ports:
      - 85:80
    healthcheck: # optional: remember to adapt the host:port to your environment
        test: ["CMD-SHELL", "wget -q --tries=1 http://localhost:80/v1/health -O - | grep -Eo '\"healthy\"\\s*:\\s*true' || exit 1"]
        interval: 60s
        timeout: 10s
        retries: 3
        start_period: 40s
    restart: unless-stopped
    environment:
      NTFY_AUTH_DEFAULT_ACCESS: deny-all
      NTFY_ENABLE_LOGIN: true
      NTFY_AUTH_FILE: /etc/ntfy/auth.db
    networks:
      - default

volumes:
  ntfy:
    external: true
  uptimekuma:
    external: true
  homepage:
    external: true
  rsync:
    external: true

networks:
  default:
"""
